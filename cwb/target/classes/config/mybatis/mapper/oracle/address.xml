<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.address">
	<insert id="insertEmail" parameterType="emailVo">
		insert into mail(mail_no,mail_rev,mail_revAddr,mail_senAddr,mail_title,mail_content
		<if test="mailFileName != null and mailFileName != ''">
			,mail_filename, mail_filesize, mail_originalfilename
		</if>
		)
		values(mail_seq.nextval,#{mailRev},#{mailRevAddr},
		#{mailSenAddr},#{mailTitle},#{mailContent}
		<if test="mailFileName != null and mailFileName != ''">
			,#{mailFileName},#{mailFileSize},#{mailOriginalFileName}		
		</if>
		)
	</insert>
	
	<select id="totalCount" parameterType="int" resultType="int">
				select count(*) from mail
				where mail_rev = #{mailRev}
				order by mail_no desc
	</select>
	
	<select id="sendMailList" parameterType="emailVo" resultType="emailVo">
		select B.*
		from
		(
			select rownum RNUM, A.*
			from(
				select * from mail
				where mail_rev = #{mailRev}
				order by mail_no desc
			)A
<![CDATA[		where rownum <=  #{firstRecordIndex}+#{recordCountPerPage}]]>
		)B
		where B.RNUM > #{firstRecordIndex}
	</select>
	
	<select id="selectDetail" parameterType="int" resultType="emailVo">
		select * from mail where mail_no = #{mailNo}
	</select>
	
	
	<select id="countNext" parameterType="int" resultType="int">
		select count(mail_no) from mail
		where mail_no > #{mailNo}
	</select>
	
	
	<select id="countPre" parameterType="int" resultType="int">
		select count(mail_no) from mail
<![CDATA[where mail_no < #{mailNo}]]>
	</select>
	
	
	<select id="selectNext" parameterType="int" resultType="int">
		select min(mail_no) from mail
		where mail_no > #{mailNo}
	</select>
	
	
	<select id="selectPre" parameterType="int" resultType="int">
		select max(mail_no) from mail
<![CDATA[where mail_no < #{mailNo}]]>
	</select>
	
	<delete id="deleteMail" parameterType="int">
		delete from mail
		where mail_no = #{mailNo}
	</delete>
	
	<select id="privateTotalCount" parameterType="map" resultType="int">
				 select count(*) from addressbook
		        where mem_no = #{memNo}
		        <if test="keyword != null and keyword != ''">
		        and addrbook_comname || addrbook_name || addrbook_email like '%'|| #{keyword} || '%'
		        </if>
	</select>
	
	
	<select id="selectPrivateAddr" parameterType="map" resultType="map">
		select B.*
		from
		(
		    select rownum rnum, A.*
		    from
		    (
		        select * from addressbook
		        where mem_no = #{memNo}
		        <if test="keyword != null and keyword != ''">
		        and addrbook_comname || addrbook_name || addrbook_email like '%'|| #{keyword} || '%'
		        </if>
		        order by addrbook_name
		    )A
<![CDATA[		where rownum <=  #{firstRecordIndex}+#{recordCountPerPage}]]>
		)B
		where B.rnum > #{firstRecordIndex}
	</select>
	
	<delete id="addrbookDel" parameterType="int">
		delete from addressbook
		where addrbook_no = #{addrbookNo}
	</delete>
	
	<insert id="addrbookAdd" parameterType="addressbookVo">
		<selectKey keyProperty="addrbookNo" resultType="int" order="BEFORE">
			select addressbook_seq.nextval from dual
		</selectKey>
		insert into addressbook
		values(#{addrbookNo}, #{addrbookName}, #{addrbookComname}, #{addrbookTel}, #{addrbookEmail}, #{memNo}, #{deptNo})
	</insert>
	
	<update id="addrbookEdit" parameterType="addressbookVo">
		update addressbook
		set addrbook_name = #{addrbookName},
		addrbook_comname = #{addrbookComname},
		addrbook_tel = #{addrbookTel},
		addrbook_email = #{addrbookEmail}
		where addrbook_no = #{addrbookNo}
	</update>
	
	<select id="selectByNo" parameterType="int" resultType="addressBookVo">
		select * from addressbook where addrbook_no = #{addressbookNo}
	</select>
</mapper>









