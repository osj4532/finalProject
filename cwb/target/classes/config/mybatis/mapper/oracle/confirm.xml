<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.confirm">
	<resultMap type="HashMap" id="getWaitOrBackListResult">
		<result property="CF_NO" column="CF_NO"/>
		<result property="FORM_NO" column="FORM_NO"/>
		<result property="MEM_NO" column="MEM_NO"/>
		<result property="CF_TITLE" column="CF_TITLE"/>
		<result property="CF_STATE" column="CF_STATE"/>
		<result property="CF_REGDATE" column="CF_REGDATE" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="MEM_NAME" column="MEM_NAME"/>
		<result property="FORM_NAME" column="FORM_NAME"/>
	</resultMap>
	
	
	<insert id="insertDoc" parameterType="confirmVo">
		<selectKey keyProperty="cfNo" resultType="int" order="BEFORE">
			select confirm_seq.nextval from dual
		</selectKey>
			insert into confirm(cf_No, form_No, cf_state, mem_No, dept_No, reg_No, cf_Title, cf_Content, cf_file, CF_TMPSTORAGE)
			values(#{cfNo}, #{formNo}, #{cfState}, #{memNo}, #{deptNo}, #{regNo}, #{cfTitle}, #{cfContent}, #{cfFile}, #{cfTmpstorage})
	</insert>
	
	<insert id="insertDocFile" parameterType="confirmFileVo">
		<selectKey keyProperty="fileNo" resultType="int" order="BEFORE">
			select confirmfile_seq.nextval from dual
		</selectKey>
		insert into confirmfile
		values(#{fileNo},#{fileName},#{fileOriginalName},#{fileSize},#{cfNo})
	</insert>
	
	<!-- cf_status 1.대기 문서,  2.완료 문서, 3. 반려 분서, 4. 임시저장 문서-->
	<select id="countWBList" resultType="int" parameterType="map">
		select count(*) from confirm C
					join confirmline CL
					on C.REG_NO = CL.REG_NO
					join member M
					on M.MEM_NO = C.MEM_NO
					join docform F
					on F.FORM_NO = C.FORM_NO
					where C.CF_ORDER = CL.LINE_ORDER
					and (CL.MEM_NO = #{memNo}     
					or C.mem_no = #{memNo})      
					and C.CF_STATE = #{state}
					and C.cf_TMPSTORAGE = 'N'
					order by C.CF_NO desc
	</select>
	
	<select id="selectWaitOrBackList" resultMap="getWaitOrBackListResult" parameterType="map">
		select B.*
		from
		(
		select rownum as rnum, A.*
				from(
					select C.CF_NO, C.FORM_NO, C.MEM_NO, C.CF_TITLE, C.CF_STATE, 
					C.CF_REGDATE, M.MEM_NAME, F.FORM_NAME from confirm C
					join confirmline CL
					on C.REG_NO = CL.REG_NO
					join member M
					on M.MEM_NO = C.MEM_NO
					join docform F
					on F.FORM_NO = C.FORM_NO
					where C.CF_ORDER = CL.LINE_ORDER
					and (CL.MEM_NO = #{memNo}     
					or C.mem_no = #{memNo})      
					and C.CF_STATE = #{state}
					and C.cf_TMPSTORAGE = 'N'
					order by C.CF_NO desc
				)A 
<![CDATA[		where rownum <=  #{firstRecordIndex}+#{recordCountPerPage}]]>
			)B
			where B.RNUM > #{firstRecordIndex}
	</select>
	
	<select id="countOkList" resultType="int" parameterType="int">
		select count(*) from confirm C
		join member M
		on M.MEM_NO = C.MEM_NO
		join docform F
		on F.FORM_NO = C.FORM_NO
		<![CDATA[where C.form_no in (select form_no from formview where ranks_no <= #{ranksNo})]]>
		and C.cf_okdate is not null
		and C.cf_TMPSTORAGE = 'N'
		order by C.CF_NO desc
	</select>
	
	<select id="selectOkList" resultMap="getWaitOrBackListResult" parameterType="map">
		select B.*
		from
		(
		select rownum as rnum, A.*
				from(
					select C.CF_NO, C.FORM_NO, C.MEM_NO, C.CF_TITLE, C.CF_STATE, 
					C.CF_REGDATE, M.MEM_NAME, F.FORM_NAME from confirm C
					join member M
					on M.MEM_NO = C.MEM_NO
					join docform F
					on F.FORM_NO = C.FORM_NO
					<![CDATA[where C.form_no in (select form_no from formview where ranks_no <= #{ranksNo})]]>
					and C.cf_okdate is not null
					and C.cf_TMPSTORAGE = 'N'
					order by C.CF_NO desc
				)A 
<![CDATA[		where rownum <=  #{firstRecordIndex}+#{recordCountPerPage}]]>
			)B
			where B.RNUM > #{firstRecordIndex}
	</select>
	
	<select id="countTmpList" resultType="int" parameterType="int">
		select count(*) from confirm C
		join member M
		on M.MEM_NO = C.MEM_NO
		join docform F
		on F.FORM_NO = C.FORM_NO
		where C.mem_no = #{memNo}
		and C.cf_TMPSTORAGE = 'Y'
		order by C.CF_NO desc
	</select>
	
	<select id="selectTmpList" resultMap="getWaitOrBackListResult" parameterType="map">
		select B.*
		from
		(
		select rownum as rnum, A.*
				from(
					select C.CF_NO, C.FORM_NO, C.MEM_NO, C.CF_TITLE, C.CF_STATE, 
					C.CF_REGDATE, M.MEM_NAME, F.FORM_NAME from confirm C
					join member M
					on M.MEM_NO = C.MEM_NO
					join docform F
					on F.FORM_NO = C.FORM_NO
					where C.mem_no = #{userNo}
					and C.cf_TMPSTORAGE = 'Y'
					order by C.CF_NO desc
				)A 
<![CDATA[		where rownum <=  #{firstRecordIndex}+#{recordCountPerPage}]]>
			)B
			where B.RNUM > #{firstRecordIndex}
	</select>
	
	<select id="confirmDetail" resultType="confirmVo" parameterType="int">
		select * from confirm
		where cf_no = #{cfNo}
	</select>
	
	<select id="selectDocFiles" resultType="confirmFileVo" parameterType="int">
		select * from confirmFile
		where cf_no = #{cfNo}
	</select>
	
	<delete id="deleteDocFile" parameterType="string">
		delete from confirmFile
		where file_name = #{fileName}
	</delete>
	
	<select id="selectFileCount" parameterType="int" resultType="int">
		select count(*) from confirmfile
		where cf_no = #{cfNo}
	</select>
	
	<update id="updateCFFileN" parameterType="int">
		update confirm
		set cf_file = 'N' where cf_no = #{cfNo}
	</update>
	
	<update id="updateConfirm" parameterType="confirmVo">
		update confirm
		set cf_title = #{cfTitle}, cf_content = #{cfContent}, cf_state = #{cfState}, cf_file = #{cfFile}
		where cf_No = #{cfNo}
	</update>
	
	<delete id="deleteConfirm" parameterType="int">
		delete from confirm
		where cf_no = #{cfNo}
	</delete>
	
	<delete id="deleteDocFileAll" parameterType="int">
		delete from confirmFile
		where cf_no = #{cfNo}
	</delete>
	
	<update id="docBack" parameterType="int">
		update confirm
		set cf_state = 3
		where cf_no = #{cfNo}
	</update>
	
	<update id="docOk" parameterType="int">
		update confirm
		set cf_order = cf_order + 1
		where cf_no = #{cfNo}
	</update>
	
	<update id="docOkComplete" parameterType="int">
		update confirm
		set cf_state = 2,
		cf_okdate = sysdate
		where cf_no = #{cfNo}
	</update>
</mapper>









